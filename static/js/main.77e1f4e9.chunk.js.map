{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","props","initialName","number","initialNumber","handleNameChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","reset","contacts","this","className","s","form","htmlFor","type","onChange","pattern","title","required","Component","defaultProps","Filter","filter","ContactList","onDeleteContact","map","id","item","onClick","uuidv4","App","initialContacts","initialFilter","duplicateValidator","find","contact","contactFormSubmitHandler","alert","prevState","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77e1f4e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3btSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__6KLDd\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    initialName: '',\n    initialNumber: '',\n  };\n\n  static propTypes = {\n    initialName: PropTypes.string.isRequired,\n    initialNumber: PropTypes.string.isRequired,\n  };\n\n  state = {\n    name: this.props.initialName,\n    number: this.props.initialNumber,\n  };\n\n  handleNameChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      contacts: [],\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label htmlFor=\"\">Name</label>\n\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <label htmlFor=\"\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onChange}></input>\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={uuidv4()}>\n          <p>\n            {name} : {number}\n          </p>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from 'components/ContactList';\n\nclass App extends Component {\n  static defaultProps = {\n    initialContacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    initialFilter: '',\n  };\n\n  static propTypes = {\n    initialContacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    initialFilter: PropTypes.string.isRequired,\n  };\n\n  state = {\n    contacts: this.props.initialContacts,\n    filter: this.props.initialFilter,\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  duplicateValidator = name =>\n    this.state.contacts.find(contact => contact.name === name);\n\n  contactFormSubmitHandler = ({ name, number }) => {\n    this.duplicateValidator(name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [{ name, number, id: uuidv4() }, ...prevState.contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    const { filter } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.contactFormSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ythg\"};"],"sourceRoot":""}